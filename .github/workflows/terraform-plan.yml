# .github/workflows/terraform-plan.yml
name: 'Terraform Plan'

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-*.yml'
  workflow_dispatch:

permissions:
  id-token: write   # Required for Azure OIDC authentication
  contents: read
  pull-requests: write  # Required to comment on PRs

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev, prod]
      fail-fast: false
    environment: ${{ matrix.environment }}
    env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0
        terraform_wrapper: false

    - name: Azure Login via OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.ARM_CLIENT_ID }}
        tenant-id: ${{ secrets.ARM_TENANT_ID }}
        subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    - name: Install Security Tools
      run: |
        pip install checkov
        curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash

    - name: Terraform Init
      run: terraform init 
      working-directory: terraform/environments/${{ matrix.environment }}

    - name: Terraform Validate
      run: terraform validate
      working-directory: terraform/environments/${{ matrix.environment }}

    - name: Terraform Format Check
      run: terraform fmt -check -recursive
      working-directory: terraform/environments/${{ matrix.environment }}

    - name: Security Scan - Checkov
      run: checkov -d . --framework terraform --output cli --skip-check CKV_AZURE_50
      continue-on-error: true
      working-directory: terraform/environments/${{ matrix.environment }}

    - name: Security Scan - TFSec
      run: tfsec .
      continue-on-error: true
      working-directory: terraform/environments/${{ matrix.environment }}

    - name: Terraform Plan
      id: plan
      run: |
        terraform plan -no-color -out=tfplan
        terraform show -no-color tfplan > tfplan.txt
      working-directory: terraform/environments/${{ matrix.environment }}