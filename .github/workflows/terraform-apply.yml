# .github/workflows/terraform-apply.yml
name: 'Terraform Apply'

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
  workflow_dispatch:

permissions:
  id-token: write   # Required for Azure OIDC authentication
  contents: read

jobs:
  terraform-apply-dev:
    name: 'Terraform Apply - Dev'
    runs-on: ubuntu-latest
    environment: dev
    env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0
        terraform_wrapper: false

    - name: Azure Login via OIDC
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.ARM_CLIENT_ID }}
        tenant-id: ${{ secrets.ARM_TENANT_ID }}
        subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    - name: Terraform Init
      run: terraform init
      working-directory: terraform/environments/dev

    - name: Terraform Validate
      run: terraform validate
      working-directory: terraform/environments/dev

    - name: Security Scan
      run: |
        pip install checkov
        checkov -d . --framework terraform --hard-fail-on CRITICAL,HIGH
      continue-on-error: true
      working-directory: terraform/environments/dev

    # - name: Terraform Plan
    #   run: terraform plan -no-color -out=tfplan
    #   working-directory: terraform/environments/dev
    - name: Terraform Plan - Download
      uses: azure/cli@v2
      with:
        azcliversion: latest
        inlineScript: | 
          set -e
          echo "CURRENT_PATH=$(pwd)" >> $GITHUB_ENV
          az storage blob download \
            --account-name thisisatestsaacc \
            --container-name tfstatefiles \
            --file tfplan \
            --name plan/dev \
            --auth-mode login

    - name: Terraform Apply
      run: terraform apply -no-color -auto-approve ${{env.CURRENT_PATH}}/tfplan | tee apply.txt
      working-directory: terraform/environments/dev

    - name: Display the apply summary
      id: display
      run: |
        {
          awk '/::debug::stdout:/{ next } /Apply complete!/ { print "## " $0; exit }' apply.txt
        } > apply.md
        cat apply.md >> $GITHUB_STEP_SUMMARY
        echo "### ðŸ“‹ Terraform Outputs - dev" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        terraform output >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
      working-directory: terraform/environments/dev
      

  manual-approval:
    name: Manual Approval
    runs-on: ubuntu-latest
    needs: terraform-apply-dev
    if: success()

    permissions:
      issues: write

    steps:
      - name: Await Manual Approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: simon-vedder # Replace with GitHub usernames, with the free version you can only have an issue assigned to one username
          minimum-approvals: 1
          issue-title: "Manual Approval Required for Terraform Apply"
          issue-body: "Please approve or deny the deployment."

  terraform-apply-prod:
    name: 'Terraform Apply - Prod'
    runs-on: ubuntu-latest
    needs: manual-approval  # requires dev env to succeed
    environment: prod
    env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0
        terraform_wrapper: false

    - name: Azure Login via OIDC
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.ARM_CLIENT_ID }}
        tenant-id: ${{ secrets.ARM_TENANT_ID }}
        subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    - name: Terraform Init
      run: terraform init
      working-directory: terraform/environments/prod

    - name: Terraform Validate
      run: terraform validate
      working-directory: terraform/environments/prod

    - name: Security Scan
      run: |
        pip install checkov
        checkov -d . --framework terraform --hard-fail-on CRITICAL,HIGH
      continue-on-error: false
      working-directory: terraform/environments/prod

    # - name: Terraform Plan
    #   run: terraform plan -no-color -out=tfplan 
    #   working-directory: terraform/environments/prod

    - name: Terraform Plan - Download
      uses: azure/cli@v2
      with:
        azcliversion: latest
        inlineScript: | 
          set -e
          echo "CURRENT_PATH=$(pwd)" >> $GITHUB_ENV
          az storage blob download \
            --account-name thisisatestsaacc \
            --container-name tfstatefiles \
            --file tfplan \
            --name plan/prod \
            --auth-mode login

    - name: Terraform Apply
      run: terraform apply -no-color -auto-approve ${{env.CURRENT_PATH}}/tfplan | tee apply.txt
      working-directory: terraform/environments/prod

    - name: Display the apply summary
      id: display
      run: |
        {
          awk '/::debug::stdout:/{ next } /Apply complete!/ { print "## " $0; exit }' apply.txt
        } > apply.md
        cat apply.md >> $GITHUB_STEP_SUMMARY
        echo "### ðŸ“‹ Terraform Outputs - prod" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        terraform output >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
      working-directory: terraform/environments/prod