# .github/workflows/terraform-apply.yml
name: 'Terraform Apply'

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
  workflow_dispatch:

permissions:
  id-token: write   # Required for Azure OIDC authentication
  contents: read

jobs:
  terraform-apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev] #, staging, prod]
      fail-fast: false
      max-parallel: 1  # Deploy environments sequentially
    
    environment: ${{ matrix.environment }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0
        terraform_wrapper: false

    - name: Azure Login via OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Terraform Init
      run: |
        cd terraform/environments/${{ matrix.environment }}
        terraform init

    - name: Terraform Validate
      run: |
        cd terraform/environments/${{ matrix.environment }}
        terraform validate

    - name: Security Scan
      run: |
        cd terraform/environments/${{ matrix.environment }}
        pip install checkov
        checkov -d . --framework terraform --hard-fail-on CRITICAL,HIGH
      continue-on-error: ${{ matrix.environment == 'dev' }}

    - name: Terraform Plan
      run: |
        cd terraform/environments/${{ matrix.environment }}
        terraform plan -no-color -out=tfplan

    - name: Terraform Apply
      run: |
        cd terraform/environments/${{ matrix.environment }}
        terraform apply -no-color -auto-approve tfplan

    - name: Terraform Output
      if: success()
      run: |
        cd terraform/environments/${{ matrix.environment }}
        echo "### ðŸ“‹ Terraform Outputs - ${{ matrix.environment }}" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        terraform output >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY